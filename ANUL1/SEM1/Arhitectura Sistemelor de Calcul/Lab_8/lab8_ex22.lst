     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, printf, scanf
     5                                  import exit msvcrt.dll
     6                                  import printf msvcrt.dll
     7                                  import scanf msvcrt.dll
     8                                  
     9                                  segment data use32 class=data
    10 00000000 00000000                    a dd 0
    11 00000004 00000000                    b dd 0
    12 00000008 03000000                    k dd 3
    13 0000000C 496E74726F64756365-         messa db "Introduceti valoarea lui 'a': ", 0
    13 00000015 74692076616C6F6172-
    13 0000001E 6561206C7569202761-
    13 00000027 273A2000           
    14 0000002B 496E74726F64756365-         messb db "Introduceti valoarea lui 'b': ", 0
    14 00000034 74692076616C6F6172-
    14 0000003D 6561206C7569202762-
    14 00000046 273A2000           
    15 0000004A 52657A756C74617475-         messfinal db "Rezultatul calculului (a+b)*k cu k = %d este: %d ", 0
    15 00000053 6C2063616C63756C75-
    15 0000005C 6C75692028612B6229-
    15 00000065 2A6B206375206B203D-
    15 0000006E 20256420657374653A-
    15 00000077 2025642000         
    16 0000007C 256400                      format db "%d",0
    17 0000007F 706175736500                string db "pause",0
    18                                      
    19                                  ;Se citesc de la tastatura doua numere a si b. Sa se calculeze valoarea expresiei (a+b)*k, k fiind o constanta definita in segmentul de date. Afisati valoarea expresiei (in baza 10).
    20                                  
    21                                  
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ; vom apela printf(messa) => se va afisa "Introduceti valoarea lui 'a': "
    25 00000000 68[0C000000]                    push dword messa
    26 00000005 FF15[00000000]                  call [printf]
    27 0000000B 83C404                          add esp, 4*1
    28                                          
    29                                          ; vom apela scanf(format, a) => se va citi un numar in variabila a
    30 0000000E 68[00000000]                    push dword a
    31 00000013 68[7C000000]                    push dword format
    32 00000018 FF15[00000000]                  call [scanf]
    33 0000001E 83C408                          add esp, 4*2
    34                                          
    35                                          ; vom apela printf(messb) => se va afisa "Introduceti valoarea lui 'b': "
    36 00000021 68[2B000000]                    push dword messb
    37 00000026 FF15[00000000]                  call [printf]
    38 0000002C 83C404                          add esp, 4*1
    39                                          
    40                                          ; vom apela scanf(format, b) => se va citi un numar in variabila b
    41 0000002F 68[04000000]                    push dword b
    42 00000034 68[7C000000]                    push dword format
    43 00000039 FF15[00000000]                  call [scanf]
    44 0000003F 83C408                          add esp, 4*2
    45                                          
    46                                          ; vom calcula valoarea expresiei (a+b)*k in registrul EAX
    47 00000042 A1[00000000]                    mov eax, [a]
    48 00000047 0305[04000000]                  add eax, [b]
    49 0000004D F72D[08000000]                  imul dword[k]           
    50                                    
    51                                          ; vom apela printf(messfinal2, k, eax) => se va afisa "Rezultatul calculului (a+b)*k cu k = %d este: %d "
    52 00000053 50                              push dword eax
    53 00000054 FF35[08000000]                  push dword [k]
    54 0000005A 68[4A000000]                    push dword messfinal
    55 0000005F FF15[00000000]                  call [printf]
    56 00000065 83C40C                          add esp, 4*3      
    57                                         
    58 00000068 6A00                            push dword 0        ; push the parameter for exit onto the stack
    59 0000006A FF15[00000000]                  call [exit]         ; call exit to terminate the program
    60                                          
    61                                          
    62                                          
    63                                   
    64                                          
