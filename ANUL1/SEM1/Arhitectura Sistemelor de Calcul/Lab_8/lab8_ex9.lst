     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, printf, fopen, fscanf, fclose
     5                                  import exit msvcrt.dll
     6                                  import printf msvcrt.dll
     7                                  import fopen msvcrt.dll
     8                                  import fscanf msvcrt.dll
     9                                  import fclose msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12 00000000 00<rept>                    frecv times 256 db 0            ; vectorul de frecventa a caracterelor din fisier
    13                                      
    14 00000100 FFFFFFFF                    descr_fis dd -1                 ; descriptorul fisierului
    15 00000104 7200                        mod_acces db "r", 0             ; modul de acces la fisier
    16 00000106 7369725F64655F6361-         nume_fisier db "sir_de_caractere.txt", 0   ; numele fisierului
    16 0000010F 726163746572652E74-
    16 00000118 787400             
    17                                      
    18 0000011B 00                          c db 0                          ; caracterul citit din fisier
    19 0000011C 256300                      format db '%c', 0               ; formatul de citire din fisier
    20 0000011F 00                          nr_aparitii_max db 0
    21 00000120 00                          carac_max db 0
    22 00000121 436172616374657275-         mesaj db "Caracterul %c apare de %d ori", 0
    22 0000012A 6C2025632061706172-
    22 00000133 65206465202564206F-
    22 0000013C 726900             
    23                                      
    24                                  ;Se da un fisier text. Sa se citeasca continutul fisierului, sa se determine caracterul special (diferit de litera) cu cea mai mare frecventa si sa se afiseze acel caracter, impreuna cu frecventa acestuia. Numele fi
    25                                      
    26                                  segment code use32 class=code
    27                                      start:
    28                                          ; apelam functia fopen() pentru a deschide fisierul
    29                                          ; functia va returna in EAX descriptorul fisierului sau 0 in caz de eroare
    30                                          ; eax = fopen(nume_fisier, mod_acces)
    31 00000000 68[04010000]                    push dword mod_acces     
    32 00000005 68[06010000]                    push dword nume_fisier
    33 0000000A FF15[00000000]                  call [fopen]
    34 00000010 83C408                          add esp, 4*2
    35                                  
    36                                          ; verificam daca functia fopen a deschis cu succes fisierul (EAX != 0)
    37 00000013 83F800                          cmp eax, 0
    38 00000016 0F84B1000000                    je final                    ; daca a aparut o eroare (EAX = 0), terminam executia programului
    39                                      
    40                                          ; stocam descriptorul de fisier (valoarea returnata de functia fopen())
    41 0000001C A3[00010000]                    mov [descr_fis], eax
    42                                      
    43                                          ; citim caracterele din fisier unul cate unul
    44 00000021 B92C010000                      mov ecx, 300            ; citim maximum 300 de caractere
    45 00000026 FC                              cld
    46                                         
    47                                      citire:
    48                                          ; apelam functia fscanf() pentru a citi din fisier
    49                                          ; functia va returna in EAX valoarea 1 (daca a citit cu succes un caracter din fisier) sau 0 in caz de eroare
    50                                          ; eax = fscanf(descr_fis, format, c)
    51 00000027 68[1B010000]                    push dword c                ; adresa la care stocam caracterul citit
    52 0000002C 68[1C010000]                    push dword format           ; formatul de citire
    53 00000031 FF35[00010000]                  push dword [descr_fis]      ; descriptorul fisierului
    54 00000037 FF15[00000000]                  call [fscanf]
    55 0000003D 83C40C                          add esp, 4*3
    56                                          
    57 00000040 83F801                          cmp eax, 1                  ; verificam daca citirea a avut loc cu succes (EAX = 1)
    58 00000043 7555                            jne stop                    ; in caz contrar (EAX != 1), incheiem citirea
    59                                          
    60                                          ;verificam daca caracterul c este litera
    61 00000045 A0[1B010000]                    mov al, [c]                 
    62 0000004A 3C61                            cmp al, 'a'                 ; verificam daca c >= 'a'
    63 0000004C 7302                            jae verificam_litera_mica
    64 0000004E EB04                            jmp verificam_litera_mare
    65                                          
    66                                      verificam_litera_mica:          ; stim ca c >= 'a'
    67 00000050 3C7A                            cmp al, 'z'                 ; verificam daca c <= 'z'
    68 00000052 76D3                            jna citire                  ; daca c <= 'z' trecem la urmatoarea citire
    69                                          
    70                                      verificam_litera_mare:
    71 00000054 3C41                            cmp al, 'A'                 ; verificam daca c >= 'A'
    72 00000056 7302                            jae verificam_litera_mare2
    73 00000058 EB04                            jmp memorare
    74                                         
    75                                      verificam_litera_mare2:         ; stim ca c >= 'A'
    76 0000005A 3C5A                            cmp al, 'Z'                 ; verificam daca c <= 'Z'
    77 0000005C 76C9                            jna citire                  ; daca c <= 'Z' trecem la urmatoarea citire
    78                                          
    79                                      memorare:                       ; stim ca c nu este litera 
    80 0000005E B800000000                      mov eax, 0
    81 00000063 A0[1B010000]                    mov al, [c]
    82 00000068 FE80[00000000]                  inc byte[frecv + eax]       ; incrementam nr de aparitii a caracterului c
    83                                          
    84                                      actualizare_maxim:
    85 0000006E 8A1D[1F010000]                  mov bl, byte[nr_aparitii_max]
    86 00000074 3898[00000000]                  cmp byte[frecv + eax], bl     ; comparam nr curent de aparitii al caract curent cu nr de aparitii maxim
    87 0000007A 7E18                            jle continua                  ; daca e mai mic sau egal cu nr de aparitii maxim trecem mai departe
    88 0000007C 8A98[00000000]                  mov bl, [frecv + eax]         
    89 00000082 881D[1F010000]                  mov [nr_aparitii_max], bl     ; daca e mai mare decat nr de aparitii maxim acesta se actualizeaza
    90 00000088 8A1D[1B010000]                  mov bl, [c]
    91 0000008E 881D[20010000]                  mov [carac_max], bl           ; de asemenea si caracterul cu nr de aparitii maxim 
    92                                           
    93                                      continua:
    94                                          
    95 00000094 49                              dec ecx                       
    96 00000095 83F900                          cmp ecx, 0
    97 00000098 7F8D                            jg citire
    98                                       
    99                                      stop:
   100                                          
   101                                          ; apelam functia fclose() pentru a inchide fisierul
   102                                          ; fclose(descr_fis)
   103 0000009A FF35[00010000]                  push dword [descr_fis]
   104 000000A0 FF15[00000000]                  call [fclose]
   105 000000A6 83C404                          add esp, 4*1
   106                                          
   107                                          ; afisam caracterul special (diferit de litera) cu cea mai mare frecventa impreuna cu nr sau de aparitii
   108 000000A9 B800000000                      mov eax, 0
   109 000000AE A0[1F010000]                    mov al, [nr_aparitii_max]
   110 000000B3 50                              push eax
   111 000000B4 B800000000                      mov eax, 0
   112 000000B9 A0[20010000]                    mov al, [carac_max]
   113 000000BE 50                              push eax
   114 000000BF 68[21010000]                    push dword mesaj
   115 000000C4 FF15[00000000]                  call [printf]
   116 000000CA 83C40C                          add esp, 4*3
   117                                      
   118                                      final:
   119                                          ; exit(0)
   120 000000CD 6A00                            push dword 0        ; push the parameter for exit onto the stack
   121 000000CF FF15[00000000]                  call [exit]         ; call exit to terminate the program
   122                                          
   123                                          
   124                                          
